drop table if exists ECFPS_PAYMENT_TBL cascade;
CREATE TABLE ECFPS_PAYMENT_TBL (
	ID bigint GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
	TRANSACTION_ID varchar(35) NOT NULL,
	FPS_REF_NO varchar(35) NULL,
	ORIGINAL_FPS_REF_NO varchar(35) NULL,
	INSTRUCTION_ID varchar(35) NOT NULL,
	END_TO_END_ID varchar(35) NULL,
	-- [Reserved fields
	ACCT_VRF_OPTION varchar(15) NULL,
	CATEGORY_PURPOSE char(6) NULL, -- Inward may be null
	-- Reserved fields]
	IS_CREDIT boolean NOT NULL,
	SETTLEMENT_AMT decimal(17,2) NOT NULL,
	SETTLEMENT_CCY char(3) NOT NULL,
	SETTLEMENT_DATE date NULL,
	-- [Reserved fields
	INSTRUCTED_AMT decimal(17,2) NULL,
	INSTRUCTED_CCY char(3) NULL,
	CHARGE_AMT decimal(17,2) NULL,
	CHARGE_CCY char(3) NULL,
	CHARGE_AGENT char(3) NULL,
	CHARGE_AGENT_BIC varchar(11) NULL,
	-- Reserved fields]
	MANDATE_ID varchar(35) NULL,
	DEBTOR_NAME varchar(500) NULL, -- Increased for encryption
	-- [Reserved fields
	IS_DEBTOR_CORP boolean NULL,
	DEBTOR_BIC varchar(11) NULL,
	-- Reserved fields]
	DEBTOR_CUST_ID varchar(35) NULL,
	-- [Reserved fields
	DEBTOR_CONTACT_MOBILE varchar(35) NULL,
	DEBTOR_CONTACT_EMAIL varchar(254) NULL,
	-- Reserved fields]
	DEBTOR_AGENT char(11) NOT NULL,
	-- [Reserved fields
	DEBTOR_AGENT_BIC varchar(11) NULL,
	-- Reserved fields]
	DEBTOR_ACCT_ID varchar(400) NOT NULL, -- Increased for encryption
	DEBTOR_ACCT_ID_TYPE char(4) NOT NULL,
	CREDITOR_NAME varchar(500) NULL, -- Increased for encryption
	-- [Reserved fields
	IS_CREDITOR_CORP boolean NULL,
	CREDITOR_BIC varchar(11) NULL,
	-- Reserved fields]
	CREDITOR_CUST_ID varchar(35) NULL,
	-- [Reserved fields
	CREDITOR_CONTACT_MOBILE varchar(35) NULL,
	CREDITOR_CONTACT_EMAIL varchar(254) NULL,
	-- Reserved fields]
	CREDITOR_AGENT char(11) NOT NULL,
	-- [Reserved fields
	CREDITOR_AGENT_BIC varchar(11) NULL,
	-- Reserved fields]
	CREDITOR_ACCT_ID varchar(400) NOT NULL, -- Increased for encryption
	CREDITOR_ACCT_ID_TYPE char(4) NOT NULL,
	PURPOSE char(4) NOT NULL,
	-- [Reserved fields
	PURPOSE_INFO varchar(35) NULL,
	-- Reserved fields]
	REMITTANCE_INFO varchar(140) NULL,
	-- [Reserved fields
	RETURN_REASON char(4) NULL,
	RETURN_REASON_INFO_1 varchar(105) NULL,
	RETURN_REASON_INFO_2 varchar(105) NULL,
	-- Reserved fields]
	TRANSACTION_STATUS char(4) NOT NULL,
	SETTLEMENT_DATETIME timestamp(3) NULL,
	ACCEPTANCE_DATETIME timestamp(3) NULL,
	STATUS_REASON varchar(8) NULL,
	STATUS_REASON_INFO_1 varchar(105) NULL,
	STATUS_REASON_INFO_2 varchar(105) NULL,
	STATUS_REASON_INFO_3 varchar(105) NULL,
	ACCT_VRF_STATUS smallint NULL,
	ACCT_VRF_VAL smallint NULL,
	BAL_STATUS smallint NOT NULL,
	BAL_STATUS_LAST_UPDATE_DATETIME timestamp(3) NULL,
	BAL_REF varchar(35) NULL,
	CLR_CD char(11) NOT NULL,
	TRG_ACCT_NO_TYPE char(4) NULL,
	TRG_ACCT_BRANCH varchar(3) NULL,
	TRG_ACCT_NO varchar(400) NULL,
	CHRG_REF varchar(35) NULL,
	CUSTOMER_CHRG_AMT decimal(17,2) NULL,
	CHRG_RULE_ID int NULL,
	TYP char(1) NOT NULL,
	-- [Reserved fields
	BUSINESS_SERVICE char(6) NOT NULL,
	-- Reserved fields]
	IS_OUTWARD boolean NOT NULL,
	CLIENT_SYS_ID varchar(35) NOT NULL,
	CLIENT_REQ_ID varchar(35) NOT NULL,
	CLIENT_USR_ID varchar(35) NULL,
	-- [Reserved fields
	IS_RR_REQUESTED boolean NULL,
	-- Reserved fields]
	IS_ONUS boolean NOT NULL,
	-- [Reserved fields
	IS_REC_RT boolean NULL,
	IS_RT_OUT boolean NULL,
	-- Reserved fields]
	EX_TYPE smallint NOT NULL,
	EX_MSG varchar(254) NULL,
	EX_HDL_STS smallint NOT NULL,
	CREATION_DATETIME timestamp(3) NOT NULL,
	LAST_UPDATE_DATETIME timestamp(3) NOT NULL,
	ADD_DAT jsonb NULL,
	CUST_1 varchar(40) NULL,
	CUST_2 varchar(40) NULL,
	CUST_3 varchar(250) NULL,
	CUST_4 varchar(40) NULL,
	CUST_5 varchar(40) NULL,
	CUST_6 varchar(40) NULL,
	CUST_7 varchar(40) NULL,
	CUST_8 varchar(40) NULL,
	CUST_9 varchar(40) NULL,
    -- Constraints must include partition key for partitioned tables
    CONSTRAINT PK_PAYMENT PRIMARY KEY (ID, CREATION_DATETIME),
    CONSTRAINT UN_PAYMENT UNIQUE (CLIENT_REQ_ID, CREATION_DATETIME)
) PARTITION BY RANGE (CREATION_DATETIME);

--  CREATE INDEX IDX_PAYMENT_CATEGORY_PURPOSE_PURPOSE_INFO ON ECFPS_PAYMENT_TBL (  CATEGORY_PURPOSE ASC  , PURPOSE_INFO ASC  )   ;
 CREATE INDEX IDX_PAYMENT_END_TO_END_ID ON ECFPS_PAYMENT_TBL (  END_TO_END_ID ASC  )   ;
 CREATE INDEX IDX_PAYMENT_EX_HDL_BAL_TX_STS ON ECFPS_PAYMENT_TBL (  EX_HDL_STS ASC  , BAL_STATUS ASC  , TRANSACTION_STATUS ASC  )   ;
 CREATE INDEX IDX_PAYMENT_FPS_REF_NO ON ECFPS_PAYMENT_TBL (  FPS_REF_NO ASC  )   ;
 CREATE INDEX IDX_PAYMENT_ISOUTWARD_CREATION_DATETIME ON ECFPS_PAYMENT_TBL (  IS_OUTWARD ASC  , CREATION_DATETIME ASC  )   ;
 CREATE INDEX IDX_PAYMENT_LAST_UPDATE_DATETIME ON ECFPS_PAYMENT_TBL (  LAST_UPDATE_DATETIME ASC  )   ;
 CREATE INDEX IDX_PAYMENT_ORIGINAL_FPS_REF_NO ON ECFPS_PAYMENT_TBL (  ORIGINAL_FPS_REF_NO ASC  , IS_OUTWARD ASC  )   ;
 CREATE INDEX IDX_PAYMENT_STTL_DATE ON ECFPS_PAYMENT_TBL (  SETTLEMENT_DATE ASC  )   ;
 CREATE INDEX IDX_PAYMENT_TRANSACTION_ID ON ECFPS_PAYMENT_TBL (  TRANSACTION_ID ASC  )   ;
 CREATE INDEX IDX_PAYMENT_INSTRUCTION_ID ON ECFPS_PAYMENT_TBL (  INSTRUCTION_ID ASC  )   ;
 
 CREATE INDEX IDX_PAYMENT_TX_STS ON ECFPS_PAYMENT_TBL (  TRANSACTION_STATUS ASC  )   ;
 CREATE INDEX IDX_PAYMENT_BAL_STS ON ECFPS_PAYMENT_TBL (  BAL_STATUS ASC  )   ;
